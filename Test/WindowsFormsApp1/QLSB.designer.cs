#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Quanlysanbong")]
	public partial class QLSBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBaoTri(BaoTri instance);
    partial void UpdateBaoTri(BaoTri instance);
    partial void DeleteBaoTri(BaoTri instance);
    partial void InsertChitiethoadon(Chitiethoadon instance);
    partial void UpdateChitiethoadon(Chitiethoadon instance);
    partial void DeleteChitiethoadon(Chitiethoadon instance);
    partial void InsertDichVu(DichVu instance);
    partial void UpdateDichVu(DichVu instance);
    partial void DeleteDichVu(DichVu instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLichDatSan(LichDatSan instance);
    partial void UpdateLichDatSan(LichDatSan instance);
    partial void DeleteLichDatSan(LichDatSan instance);
    partial void InsertNangCap(NangCap instance);
    partial void UpdateNangCap(NangCap instance);
    partial void DeleteNangCap(NangCap instance);
    partial void InsertSanBong(SanBong instance);
    partial void UpdateSanBong(SanBong instance);
    partial void DeleteSanBong(SanBong instance);
    #endregion
		
		public QLSBDataContext() : 
				base(global::WindowsFormsApp1.Properties.Settings.Default.QuanlysanbongConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLSBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLSBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BaoTri> BaoTris
		{
			get
			{
				return this.GetTable<BaoTri>();
			}
		}
		
		public System.Data.Linq.Table<Chitiethoadon> Chitiethoadons
		{
			get
			{
				return this.GetTable<Chitiethoadon>();
			}
		}
		
		public System.Data.Linq.Table<DichVu> DichVus
		{
			get
			{
				return this.GetTable<DichVu>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LichDatSan> LichDatSans
		{
			get
			{
				return this.GetTable<LichDatSan>();
			}
		}
		
		public System.Data.Linq.Table<NangCap> NangCaps
		{
			get
			{
				return this.GetTable<NangCap>();
			}
		}
		
		public System.Data.Linq.Table<SanBong> SanBongs
		{
			get
			{
				return this.GetTable<SanBong>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaoTri")]
	public partial class BaoTri : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBaoTri;
		
		private System.Nullable<int> _MaSanBong;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _TongTien;
		
		private EntityRef<SanBong> _SanBong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaoTriChanging(int value);
    partial void OnMaBaoTriChanged();
    partial void OnMaSanBongChanging(System.Nullable<int> value);
    partial void OnMaSanBongChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    #endregion
		
		public BaoTri()
		{
			this._SanBong = default(EntityRef<SanBong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaoTri", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBaoTri
		{
			get
			{
				return this._MaBaoTri;
			}
			set
			{
				if ((this._MaBaoTri != value))
				{
					this.OnMaBaoTriChanging(value);
					this.SendPropertyChanging();
					this._MaBaoTri = value;
					this.SendPropertyChanged("MaBaoTri");
					this.OnMaBaoTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanBong", DbType="Int")]
		public System.Nullable<int> MaSanBong
		{
			get
			{
				return this._MaSanBong;
			}
			set
			{
				if ((this._MaSanBong != value))
				{
					if (this._SanBong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanBongChanging(value);
					this.SendPropertyChanging();
					this._MaSanBong = value;
					this.SendPropertyChanged("MaSanBong");
					this.OnMaSanBongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Money")]
		public System.Nullable<decimal> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBong_BaoTri", Storage="_SanBong", ThisKey="MaSanBong", OtherKey="MaSanBong", IsForeignKey=true)]
		public SanBong SanBong
		{
			get
			{
				return this._SanBong.Entity;
			}
			set
			{
				SanBong previousValue = this._SanBong.Entity;
				if (((previousValue != value) 
							|| (this._SanBong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanBong.Entity = null;
						previousValue.BaoTris.Remove(this);
					}
					this._SanBong.Entity = value;
					if ((value != null))
					{
						value.BaoTris.Add(this);
						this._MaSanBong = value.MaSanBong;
					}
					else
					{
						this._MaSanBong = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanBong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chitiethoadon")]
	public partial class Chitiethoadon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChitiethoadon;
		
		private System.Nullable<int> _MaHoaDon;
		
		private System.Nullable<int> _MaSanBong;
		
		private System.Nullable<int> _MaDichVu;
		
		private System.Nullable<System.TimeSpan> _GioBatDau;
		
		private System.Nullable<System.TimeSpan> _GioKetThuc;
		
		private EntityRef<DichVu> _DichVu;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<SanBong> _SanBong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChitiethoadonChanging(int value);
    partial void OnMaChitiethoadonChanged();
    partial void OnMaHoaDonChanging(System.Nullable<int> value);
    partial void OnMaHoaDonChanged();
    partial void OnMaSanBongChanging(System.Nullable<int> value);
    partial void OnMaSanBongChanged();
    partial void OnMaDichVuChanging(System.Nullable<int> value);
    partial void OnMaDichVuChanged();
    partial void OnGioBatDauChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioBatDauChanged();
    partial void OnGioKetThucChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioKetThucChanged();
    #endregion
		
		public Chitiethoadon()
		{
			this._DichVu = default(EntityRef<DichVu>);
			this._HoaDon = default(EntityRef<HoaDon>);
			this._SanBong = default(EntityRef<SanBong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChitiethoadon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaChitiethoadon
		{
			get
			{
				return this._MaChitiethoadon;
			}
			set
			{
				if ((this._MaChitiethoadon != value))
				{
					this.OnMaChitiethoadonChanging(value);
					this.SendPropertyChanging();
					this._MaChitiethoadon = value;
					this.SendPropertyChanged("MaChitiethoadon");
					this.OnMaChitiethoadonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Int")]
		public System.Nullable<int> MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanBong", DbType="Int")]
		public System.Nullable<int> MaSanBong
		{
			get
			{
				return this._MaSanBong;
			}
			set
			{
				if ((this._MaSanBong != value))
				{
					if (this._SanBong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanBongChanging(value);
					this.SendPropertyChanging();
					this._MaSanBong = value;
					this.SendPropertyChanged("MaSanBong");
					this.OnMaSanBongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDichVu", DbType="Int")]
		public System.Nullable<int> MaDichVu
		{
			get
			{
				return this._MaDichVu;
			}
			set
			{
				if ((this._MaDichVu != value))
				{
					if (this._DichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaDichVu = value;
					this.SendPropertyChanged("MaDichVu");
					this.OnMaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioBatDau", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioBatDau
		{
			get
			{
				return this._GioBatDau;
			}
			set
			{
				if ((this._GioBatDau != value))
				{
					this.OnGioBatDauChanging(value);
					this.SendPropertyChanging();
					this._GioBatDau = value;
					this.SendPropertyChanged("GioBatDau");
					this.OnGioBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioKetThuc", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioKetThuc
		{
			get
			{
				return this._GioKetThuc;
			}
			set
			{
				if ((this._GioKetThuc != value))
				{
					this.OnGioKetThucChanging(value);
					this.SendPropertyChanging();
					this._GioKetThuc = value;
					this.SendPropertyChanged("GioKetThuc");
					this.OnGioKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_Chitiethoadon", Storage="_DichVu", ThisKey="MaDichVu", OtherKey="MaDichVu", IsForeignKey=true)]
		public DichVu DichVu
		{
			get
			{
				return this._DichVu.Entity;
			}
			set
			{
				DichVu previousValue = this._DichVu.Entity;
				if (((previousValue != value) 
							|| (this._DichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DichVu.Entity = null;
						previousValue.Chitiethoadons.Remove(this);
					}
					this._DichVu.Entity = value;
					if ((value != null))
					{
						value.Chitiethoadons.Add(this);
						this._MaDichVu = value.MaDichVu;
					}
					else
					{
						this._MaDichVu = default(Nullable<int>);
					}
					this.SendPropertyChanged("DichVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_Chitiethoadon", Storage="_HoaDon", ThisKey="MaHoaDon", OtherKey="MaHoaDon", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.Chitiethoadons.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.Chitiethoadons.Add(this);
						this._MaHoaDon = value.MaHoaDon;
					}
					else
					{
						this._MaHoaDon = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBong_Chitiethoadon", Storage="_SanBong", ThisKey="MaSanBong", OtherKey="MaSanBong", IsForeignKey=true)]
		public SanBong SanBong
		{
			get
			{
				return this._SanBong.Entity;
			}
			set
			{
				SanBong previousValue = this._SanBong.Entity;
				if (((previousValue != value) 
							|| (this._SanBong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanBong.Entity = null;
						previousValue.Chitiethoadons.Remove(this);
					}
					this._SanBong.Entity = value;
					if ((value != null))
					{
						value.Chitiethoadons.Add(this);
						this._MaSanBong = value.MaSanBong;
					}
					else
					{
						this._MaSanBong = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanBong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DichVu")]
	public partial class DichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDichVu;
		
		private string _TenDichVu;
		
		private System.Nullable<decimal> _GiaBan;
		
		private System.Nullable<decimal> _GiaNhap;
		
		private System.Nullable<int> _SoLuong;
		
		private EntitySet<Chitiethoadon> _Chitiethoadons;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDichVuChanging(int value);
    partial void OnMaDichVuChanged();
    partial void OnTenDichVuChanging(string value);
    partial void OnTenDichVuChanged();
    partial void OnGiaBanChanging(System.Nullable<decimal> value);
    partial void OnGiaBanChanged();
    partial void OnGiaNhapChanging(System.Nullable<decimal> value);
    partial void OnGiaNhapChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public DichVu()
		{
			this._Chitiethoadons = new EntitySet<Chitiethoadon>(new Action<Chitiethoadon>(this.attach_Chitiethoadons), new Action<Chitiethoadon>(this.detach_Chitiethoadons));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDichVu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDichVu
		{
			get
			{
				return this._MaDichVu;
			}
			set
			{
				if ((this._MaDichVu != value))
				{
					this.OnMaDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaDichVu = value;
					this.SendPropertyChanged("MaDichVu");
					this.OnMaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDichVu", DbType="NVarChar(100)")]
		public string TenDichVu
		{
			get
			{
				return this._TenDichVu;
			}
			set
			{
				if ((this._TenDichVu != value))
				{
					this.OnTenDichVuChanging(value);
					this.SendPropertyChanging();
					this._TenDichVu = value;
					this.SendPropertyChanged("TenDichVu");
					this.OnTenDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Money")]
		public System.Nullable<decimal> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaNhap", DbType="Money")]
		public System.Nullable<decimal> GiaNhap
		{
			get
			{
				return this._GiaNhap;
			}
			set
			{
				if ((this._GiaNhap != value))
				{
					this.OnGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._GiaNhap = value;
					this.SendPropertyChanged("GiaNhap");
					this.OnGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_Chitiethoadon", Storage="_Chitiethoadons", ThisKey="MaDichVu", OtherKey="MaDichVu")]
		public EntitySet<Chitiethoadon> Chitiethoadons
		{
			get
			{
				return this._Chitiethoadons;
			}
			set
			{
				this._Chitiethoadons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_HoaDon", Storage="_HoaDons", ThisKey="MaDichVu", OtherKey="MaDichVu")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chitiethoadons(Chitiethoadon entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = this;
		}
		
		private void detach_Chitiethoadons(Chitiethoadon entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DichVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoaDon;
		
		private System.Nullable<System.DateTime> _NgayXuat;
		
		private System.Nullable<int> _MaSanBong;
		
		private System.Nullable<int> _MaDichVu;
		
		private System.Nullable<int> _MaKhachHang;
		
		private System.Nullable<decimal> _TongTien;
		
		private EntitySet<Chitiethoadon> _Chitiethoadons;
		
		private EntitySet<LichDatSan> _LichDatSans;
		
		private EntityRef<DichVu> _DichVu;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<SanBong> _SanBong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(int value);
    partial void OnMaHoaDonChanged();
    partial void OnNgayXuatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayXuatChanged();
    partial void OnMaSanBongChanging(System.Nullable<int> value);
    partial void OnMaSanBongChanged();
    partial void OnMaDichVuChanging(System.Nullable<int> value);
    partial void OnMaDichVuChanged();
    partial void OnMaKhachHangChanging(System.Nullable<int> value);
    partial void OnMaKhachHangChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    #endregion
		
		public HoaDon()
		{
			this._Chitiethoadons = new EntitySet<Chitiethoadon>(new Action<Chitiethoadon>(this.attach_Chitiethoadons), new Action<Chitiethoadon>(this.detach_Chitiethoadons));
			this._LichDatSans = new EntitySet<LichDatSan>(new Action<LichDatSan>(this.attach_LichDatSans), new Action<LichDatSan>(this.detach_LichDatSans));
			this._DichVu = default(EntityRef<DichVu>);
			this._KhachHang = default(EntityRef<KhachHang>);
			this._SanBong = default(EntityRef<SanBong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayXuat
		{
			get
			{
				return this._NgayXuat;
			}
			set
			{
				if ((this._NgayXuat != value))
				{
					this.OnNgayXuatChanging(value);
					this.SendPropertyChanging();
					this._NgayXuat = value;
					this.SendPropertyChanged("NgayXuat");
					this.OnNgayXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanBong", DbType="Int")]
		public System.Nullable<int> MaSanBong
		{
			get
			{
				return this._MaSanBong;
			}
			set
			{
				if ((this._MaSanBong != value))
				{
					if (this._SanBong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanBongChanging(value);
					this.SendPropertyChanging();
					this._MaSanBong = value;
					this.SendPropertyChanged("MaSanBong");
					this.OnMaSanBongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDichVu", DbType="Int")]
		public System.Nullable<int> MaDichVu
		{
			get
			{
				return this._MaDichVu;
			}
			set
			{
				if ((this._MaDichVu != value))
				{
					if (this._DichVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDichVuChanging(value);
					this.SendPropertyChanging();
					this._MaDichVu = value;
					this.SendPropertyChanged("MaDichVu");
					this.OnMaDichVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="Int")]
		public System.Nullable<int> MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Money")]
		public System.Nullable<decimal> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_Chitiethoadon", Storage="_Chitiethoadons", ThisKey="MaHoaDon", OtherKey="MaHoaDon")]
		public EntitySet<Chitiethoadon> Chitiethoadons
		{
			get
			{
				return this._Chitiethoadons;
			}
			set
			{
				this._Chitiethoadons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_LichDatSan", Storage="_LichDatSans", ThisKey="MaHoaDon", OtherKey="MaHoaDon")]
		public EntitySet<LichDatSan> LichDatSans
		{
			get
			{
				return this._LichDatSans;
			}
			set
			{
				this._LichDatSans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DichVu_HoaDon", Storage="_DichVu", ThisKey="MaDichVu", OtherKey="MaDichVu", IsForeignKey=true)]
		public DichVu DichVu
		{
			get
			{
				return this._DichVu.Entity;
			}
			set
			{
				DichVu previousValue = this._DichVu.Entity;
				if (((previousValue != value) 
							|| (this._DichVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DichVu.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._DichVu.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaDichVu = value.MaDichVu;
					}
					else
					{
						this._MaDichVu = default(Nullable<int>);
					}
					this.SendPropertyChanged("DichVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBong_HoaDon", Storage="_SanBong", ThisKey="MaSanBong", OtherKey="MaSanBong", IsForeignKey=true)]
		public SanBong SanBong
		{
			get
			{
				return this._SanBong.Entity;
			}
			set
			{
				SanBong previousValue = this._SanBong.Entity;
				if (((previousValue != value) 
							|| (this._SanBong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanBong.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._SanBong.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaSanBong = value.MaSanBong;
					}
					else
					{
						this._MaSanBong = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanBong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chitiethoadons(Chitiethoadon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_Chitiethoadons(Chitiethoadon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
		
		private void attach_LichDatSans(LichDatSan entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_LichDatSans(LichDatSan entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhachHang;
		
		private string _HoTen;
		
		private string _SoDienThoai;
		
		private string _DiaChi;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<LichDatSan> _LichDatSans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachHangChanging(int value);
    partial void OnMaKhachHangChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KhachHang()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._LichDatSans = new EntitySet<LichDatSan>(new Action<LichDatSan>(this.attach_LichDatSans), new Action<LichDatSan>(this.detach_LichDatSans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_HoaDons", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_LichDatSan", Storage="_LichDatSans", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<LichDatSan> LichDatSans
		{
			get
			{
				return this._LichDatSans;
			}
			set
			{
				this._LichDatSans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_LichDatSans(LichDatSan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_LichDatSans(LichDatSan entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichDatSan")]
	public partial class LichDatSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDatSan;
		
		private System.Nullable<int> _MaKhachHang;
		
		private System.Nullable<int> _MaHoaDon;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDatSanChanging(int value);
    partial void OnMaDatSanChanged();
    partial void OnMaKhachHangChanging(System.Nullable<int> value);
    partial void OnMaKhachHangChanged();
    partial void OnMaHoaDonChanging(System.Nullable<int> value);
    partial void OnMaHoaDonChanged();
    #endregion
		
		public LichDatSan()
		{
			this._HoaDon = default(EntityRef<HoaDon>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatSan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDatSan
		{
			get
			{
				return this._MaDatSan;
			}
			set
			{
				if ((this._MaDatSan != value))
				{
					this.OnMaDatSanChanging(value);
					this.SendPropertyChanging();
					this._MaDatSan = value;
					this.SendPropertyChanged("MaDatSan");
					this.OnMaDatSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="Int")]
		public System.Nullable<int> MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Int")]
		public System.Nullable<int> MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_LichDatSan", Storage="_HoaDon", ThisKey="MaHoaDon", OtherKey="MaHoaDon", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.LichDatSans.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.LichDatSans.Add(this);
						this._MaHoaDon = value.MaHoaDon;
					}
					else
					{
						this._MaHoaDon = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_LichDatSan", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.LichDatSans.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.LichDatSans.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NangCap")]
	public partial class NangCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNangCap;
		
		private System.Nullable<int> _MaSanBong;
		
		private System.Nullable<decimal> _Gia;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<SanBong> _SanBong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNangCapChanging(int value);
    partial void OnMaNangCapChanged();
    partial void OnMaSanBongChanging(System.Nullable<int> value);
    partial void OnMaSanBongChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public NangCap()
		{
			this._SanBong = default(EntityRef<SanBong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNangCap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNangCap
		{
			get
			{
				return this._MaNangCap;
			}
			set
			{
				if ((this._MaNangCap != value))
				{
					this.OnMaNangCapChanging(value);
					this.SendPropertyChanging();
					this._MaNangCap = value;
					this.SendPropertyChanged("MaNangCap");
					this.OnMaNangCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanBong", DbType="Int")]
		public System.Nullable<int> MaSanBong
		{
			get
			{
				return this._MaSanBong;
			}
			set
			{
				if ((this._MaSanBong != value))
				{
					if (this._SanBong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanBongChanging(value);
					this.SendPropertyChanging();
					this._MaSanBong = value;
					this.SendPropertyChanged("MaSanBong");
					this.OnMaSanBongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Money")]
		public System.Nullable<decimal> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBong_NangCap", Storage="_SanBong", ThisKey="MaSanBong", OtherKey="MaSanBong", IsForeignKey=true)]
		public SanBong SanBong
		{
			get
			{
				return this._SanBong.Entity;
			}
			set
			{
				SanBong previousValue = this._SanBong.Entity;
				if (((previousValue != value) 
							|| (this._SanBong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanBong.Entity = null;
						previousValue.NangCaps.Remove(this);
					}
					this._SanBong.Entity = value;
					if ((value != null))
					{
						value.NangCaps.Add(this);
						this._MaSanBong = value.MaSanBong;
					}
					else
					{
						this._MaSanBong = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanBong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanBong")]
	public partial class SanBong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSanBong;
		
		private string _TenSan;
		
		private string _LoaiSan;
		
		private string _TinhTrangSan;
		
		private System.Nullable<decimal> _DonGia;
		
		private EntitySet<BaoTri> _BaoTris;
		
		private EntitySet<Chitiethoadon> _Chitiethoadons;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<NangCap> _NangCaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanBongChanging(int value);
    partial void OnMaSanBongChanged();
    partial void OnTenSanChanging(string value);
    partial void OnTenSanChanged();
    partial void OnLoaiSanChanging(string value);
    partial void OnLoaiSanChanged();
    partial void OnTinhTrangSanChanging(string value);
    partial void OnTinhTrangSanChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public SanBong()
		{
			this._BaoTris = new EntitySet<BaoTri>(new Action<BaoTri>(this.attach_BaoTris), new Action<BaoTri>(this.detach_BaoTris));
			this._Chitiethoadons = new EntitySet<Chitiethoadon>(new Action<Chitiethoadon>(this.attach_Chitiethoadons), new Action<Chitiethoadon>(this.detach_Chitiethoadons));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._NangCaps = new EntitySet<NangCap>(new Action<NangCap>(this.attach_NangCaps), new Action<NangCap>(this.detach_NangCaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanBong", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSanBong
		{
			get
			{
				return this._MaSanBong;
			}
			set
			{
				if ((this._MaSanBong != value))
				{
					this.OnMaSanBongChanging(value);
					this.SendPropertyChanging();
					this._MaSanBong = value;
					this.SendPropertyChanged("MaSanBong");
					this.OnMaSanBongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSan", DbType="NVarChar(100)")]
		public string TenSan
		{
			get
			{
				return this._TenSan;
			}
			set
			{
				if ((this._TenSan != value))
				{
					this.OnTenSanChanging(value);
					this.SendPropertyChanging();
					this._TenSan = value;
					this.SendPropertyChanged("TenSan");
					this.OnTenSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiSan", DbType="NVarChar(50)")]
		public string LoaiSan
		{
			get
			{
				return this._LoaiSan;
			}
			set
			{
				if ((this._LoaiSan != value))
				{
					this.OnLoaiSanChanging(value);
					this.SendPropertyChanging();
					this._LoaiSan = value;
					this.SendPropertyChanged("LoaiSan");
					this.OnLoaiSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangSan", DbType="NVarChar(50)")]
		public string TinhTrangSan
		{
			get
			{
				return this._TinhTrangSan;
			}
			set
			{
				if ((this._TinhTrangSan != value))
				{
					this.OnTinhTrangSanChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangSan = value;
					this.SendPropertyChanged("TinhTrangSan");
					this.OnTinhTrangSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Money")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBong_BaoTri", Storage="_BaoTris", ThisKey="MaSanBong", OtherKey="MaSanBong")]
		public EntitySet<BaoTri> BaoTris
		{
			get
			{
				return this._BaoTris;
			}
			set
			{
				this._BaoTris.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBong_Chitiethoadon", Storage="_Chitiethoadons", ThisKey="MaSanBong", OtherKey="MaSanBong")]
		public EntitySet<Chitiethoadon> Chitiethoadons
		{
			get
			{
				return this._Chitiethoadons;
			}
			set
			{
				this._Chitiethoadons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBong_HoaDon", Storage="_HoaDons", ThisKey="MaSanBong", OtherKey="MaSanBong")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanBong_NangCap", Storage="_NangCaps", ThisKey="MaSanBong", OtherKey="MaSanBong")]
		public EntitySet<NangCap> NangCaps
		{
			get
			{
				return this._NangCaps;
			}
			set
			{
				this._NangCaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BaoTris(BaoTri entity)
		{
			this.SendPropertyChanging();
			entity.SanBong = this;
		}
		
		private void detach_BaoTris(BaoTri entity)
		{
			this.SendPropertyChanging();
			entity.SanBong = null;
		}
		
		private void attach_Chitiethoadons(Chitiethoadon entity)
		{
			this.SendPropertyChanging();
			entity.SanBong = this;
		}
		
		private void detach_Chitiethoadons(Chitiethoadon entity)
		{
			this.SendPropertyChanging();
			entity.SanBong = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.SanBong = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.SanBong = null;
		}
		
		private void attach_NangCaps(NangCap entity)
		{
			this.SendPropertyChanging();
			entity.SanBong = this;
		}
		
		private void detach_NangCaps(NangCap entity)
		{
			this.SendPropertyChanging();
			entity.SanBong = null;
		}
	}
}
#pragma warning restore 1591
